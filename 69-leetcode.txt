69. Sqrt(x)
Hint
Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well.

You must not use any built-in exponent function or operator.

For example, do not use pow(x, 0.5) in c++ or x ** 0.5 in python.
 

Example 1:

Input: x = 4
Output: 2
Explanation: The square root of 4 is 2, so we return 2.
Example 2:

Input: x = 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since we round it down to the nearest integer, 2 is returned.
 

Constraints:

0 <= x <= 231 - 1
--------------------------------------------------------------------------------------------------------------
Hint
We can use a binary search approach to find the square root of a number. The idea is to
1. Initialize two pointers, low and high, to the start and end of the search range.
2. Calculate the mid value of the current search range.
3. Compare the square of the mid value with the input number x.
4. If the square of the mid value is less than x, move the low pointer to mid
5. If the square of the mid value is greater than x, move the high pointer to mid
6. Repeat steps 2-5 until low and high pointers converge.
