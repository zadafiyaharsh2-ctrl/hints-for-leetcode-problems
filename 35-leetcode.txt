35. Search Insert Position
Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You must write an algorithm with O(log n) runtime complexity.

 

Example 1:

Input: nums = [1,3,5,6], target = 5
Output: 2
Example 2:

Input: nums = [1,3,5,6], target = 2
Output: 1
Example 3:

Input: nums = [1,3,5,6], target = 7
Output: 4
 

Constraints:

1 <= nums.length <= 104
-104 <= nums[i] <= 104
nums contains distinct values sorted in ascending order.
-104 <= target <= 104
------------------------------------------------------------------------------------------------
Hints
1. We can use a binary search algorithm to solve this problem. The idea is to find the
2. middle element of the array and compare it with the target value. If the target is
3.  greater than the middle element, we can discard the left half of the array. If
4.  the target is less than the middle element, we can discard the right half of the
5.  array. We repeat this process until we find the target or the remaining array has only
6.  one element.



