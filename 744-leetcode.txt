744. Find Smallest Letter Greater Than Target
Hint
You are given an array of characters letters that is sorted in non-decreasing order, and a character target. There are at least two different characters in letters.

Return the smallest character in letters that is lexicographically greater than target. If such a character does not exist, return the first character in letters.

 

Example 1:

Input: letters = ["c","f","j"], target = "a"
Output: "c"
Explanation: The smallest character that is lexicographically greater than 'a' in letters is 'c'.
Example 2:

Input: letters = ["c","f","j"], target = "c"
Output: "f"
Explanation: The smallest character that is lexicographically greater than 'c' in letters is 'f'.
Example 3:

Input: letters = ["x","x","y","y"], target = "z"
Output: "x"
Explanation: There are no characters in letters that is lexicographically greater than 'z' so we return letters[0].
 

Constraints:

2 <= letters.length <= 104
letters[i] is a lowercase English letter.
letters is sorted in non-decreasing order.
letters contains at least two different characters.
target is a lowercase English letter.
------------------------------------------------------------------------------------------------------------
Hints
here by the problem statement, we know that the array is sorted in non-decreasing order. This means that if
we find a character that is greater than the target, we can be sure that it is the smallest
character that is greater than the target.
We can use a binary search approach to solve this problem. We start by finding the index of the
target character in the array. If the target character is not found, we return the first character in
the array. If the target character is found, we check if it is the last character in The
array. If it is, we return the first character in the array. If it is not,
we return the character that is next to the target character.